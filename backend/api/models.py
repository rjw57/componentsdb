# generated by datamodel-codegen:
#   filename:  spec.yaml

from __future__ import annotations

from typing import Annotated, List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class UUIDModel(RootModel[UUID]):
    root: Annotated[
        UUID,
        Field(
            max_length=36,
            min_length=36,
            pattern="^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        ),
    ]


class CabinetSummary(BaseModel):
    id: Optional[UUID] = None
    name: Optional[str] = None


class ServerStatus(BaseModel):
    pass


class CabinetList(BaseModel):
    items: Optional[List[CabinetSummary]] = None
    next_cursor: Annotated[Optional[UUIDModel], Field(None, alias="nextCursor")]


class DrawerSummary(BaseModel):
    id: Optional[UUID] = None
    label: Optional[str] = None


class DrawerDetail(DrawerSummary):
    pass


class CabinetDetail(CabinetSummary):
    drawers: Optional[List[DrawerDetail]] = None
